@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter!</h1>

<p role="status"><span class="@BackGroundColor">Current count: @currentCount</span></p>

<p><input type="number" @bind="@increment" @onkeypress="KeyHandler" @onkeypress:preventDefault /></p>
<p><input type="number" @bind="@increment" @bind:event="oninput" /></p>

<div style="margin-bottom:20px;">
    <p>Fecha</p>
    <input @bind="@Today" @bind:format="dd-MM-yyyy" />
</div>

<div style="width: 400px; height:400px; background:yellow;" @onmousemove="OuterMouseMove">
    @outerPos
    <div style="width: 300px; height:300px; background:green;" @onmousemove="InnerMouseMove" @onmousemove:stopPropagation="@propagation">
        @innerPos
    </div>
</div>

<button class="btn btn-primary" disabled="@(currentCount > 1000)" @onclick="IncrementCount">Click me</button>

<button class="btn btn-secondary" @onclick="AutoIncrement">Auto Increment</button>


@code {
    private int currentCount = 0;
    private int increment = 10;
    private bool propagation = true;
    private DateTime Today = DateTime.Now;

    //private void IncrementCount(MouseEventArgs e)
    //{
    //    if (e.CtrlKey)
    //    {
    //        currentCount -= increment;
    //    }
    //    else
    //    {
    //        currentCount += increment;
    //    }
    //}

    private void IncrementCount()
    {
        currentCount += 1;
        Console.WriteLine("++");
    }

    private void KeyHandler(KeyboardEventArgs e)
    {
        if (e.Key == "+")
        {
            increment += 1;
        }
        else if (e.Key == "-")
        {
            increment -= 1;
        }
    }

    private string BackGroundColor => (currentCount % 2 == 0) ? "red-background" : "yellow-background";

    private string outerPos = "Nothing yet";

    private void OuterMouseMove(MouseEventArgs e)
    {
        outerPos = $"Mouse at {e.ClientX}x{e.ClientY}";
    }

    private string innerPos = "Nothing yet";

    private void InnerMouseMove(MouseEventArgs e)
    {
        innerPos = $"Mouse at {e.ClientX}x{e.ClientY}";
    }

    private void AutoIncrement()
    {
        var timer = new System.Threading.Timer(
            callback: (_) => { IncrementCount(); StateHasChanged(); },
            state: null,
            dueTime: TimeSpan.FromSeconds(1),
            period: TimeSpan.FromSeconds(1));
    }
}
